#A program in which computer playes the TIC TAC TOE game with user

def box_print(list):  #function to print TIC TAC TOE game box
    print(f'+-------+-------+-------+\n|       |       |       |\n|   {list[0][0]}   |   {list[0][1]}   |   {list[0][2]}   |\n|       |       |       |\n+-------+-------+-------+\n|       |       |       |\n|   {list[1][0]}   |   {list[1][1]}   |   {list[1][2]}   |\n|       |       |       |\n+-------+-------+-------+\n|       |       |       |\n|   {list[2][0]}   |   {list[2][1]}   |   {list[2][2]}   |\n|       |       |       |\n+-------+-------+-------+')
    return

'''
The box is printed as below
+-------+-------+-------+
|       |       |       |
|   1   |   2   |   3   |
|       |       |       |
+-------+-------+-------+
|       |       |       |
|   4   |   5   |   6   |
|       |       |       |
+-------+-------+-------+
|       |       |       |
|   7   |   8   |   9   |
|       |       |       |
+-------+-------+-------+
'''

def turn_num_validity_check(index, list): #function to check if the random number generated by the computer for its turn or the number entered by the user for his turn is valid in game
    if index == 1:
        if list[0][0] == 'X' or list[0][0] == 'O':
            return False
        else:
            return True
    elif index == 2:
        if list[0][1] == 'X' or list[0][1] == 'O':
            return False
        else:
            return True
    elif index == 3:
        if list[0][2] == 'X' or list[0][2] == 'O':
            return False
        else:
            return True
    elif index == 4:
        if list[1][0] == 'X' or list[1][0] == 'O':
            return False
        else:
            return True
    elif index == 5:
        if list[1][1] == 'X' or list[1][1] == 'O':
            return False
        else:
            return True
    elif index == 6:
        if list[1][2] == 'X' or list[1][2] == 'O':
            return False
        else:
            return True
    elif index == 7:
        if list[2][0] == 'X' or list[2][0] == 'O':
            return False
        else:
            return True
    elif index == 8:
        if list[2][1] == 'X' or list[2][1] == 'O':
            return False
        else:
            return True
    elif index == 9:
        if list[2][2] == 'X' or list[2][2] == 'O':
            return False
        else:
            return True
    else:
        return True

def computer_updatelist(list, turn_number): #function to update the game after computer turn
    if turn_number == 1:
        list[0][0] = 'X'
        return list
    elif turn_number == 2:
        list[0][1] = 'X'
        return list
    elif turn_number == 3:
        list[0][2] = 'X'
        return list
    elif turn_number == 4:
        list[1][0] = 'X'
        return list
    elif turn_number == 5:
        list[1][1] = 'X'
        return list
    elif turn_number == 6:
        list[1][2] = 'X'
        return list
    elif turn_number == 7:
        list[2][0] = 'X'
        return list
    elif turn_number == 8:
        list[2][1] = 'X'
        return list
    elif turn_number == 9:
        list[2][2] = 'X'
        return list
    else:
        pass 

def computer_turn(list): #function to create a random number for computer turn
    turn_number = randrange(1,10)
    number_valid = turn_num_validity_check(turn_number, list) #calling function which checks if the generated number is possible in game.
    if number_valid == True:
        return turn_number
    else:
        computer_turn(list)

def user_updatelist(list, turn_number): #function to update the game after user turn
    if turn_number == 1:
        list[0][0] = 'O'
        return list
    elif turn_number == 2:
        list[0][1] = 'O'
        return list
    elif turn_number == 3:
        list[0][2] = 'O'
        return list
    elif turn_number == 4:
        list[1][0] = 'O'
        return list
    elif turn_number == 5:
        list[1][1] = 'O'
        return list
    elif turn_number == 6:
        list[1][2] = 'O'
        return list
    elif turn_number == 7:
        list[2][0] = 'O'
        return list
    elif turn_number == 8:
        list[2][1] = 'O'
        return list
    elif turn_number == 9:
        list[2][2] = 'O'
        return list
    else:
        pass 

def user_turn(list): #function to take user's input
    turn_number = int(input('Enter your number: '))
    list_to_check = list[:]
    number_valid = turn_num_validity_check(turn_number, list_to_check) #calling function which checks if the entered number is possible in game.
    if number_valid == True:
        return turn_number #In case a user input is wrong for the first time, the second time it doesn't returns the value of turn_number 
    else:
        print(f'{turn_number} Place if already taken!!!')
        user_turn(list)

def winnercheck(list): #function to check the winner of game.
    if (list[0][0] == 'X' and (list[0][0]==list[0][1]==list[0][2])) or (list[1][0] == 'X' and (list[1][0]==list[1][1]==list[1][2])) or (list[2][0] == 'X' and (list[2][0]==list[2][1]==list[2][2])) or (list[0][0] == 'X' and (list[0][0]==list[1][0]==list[2][0])) or (list[0][1] == 'X' and (list[0][1]==list[1][1]==list[2][1])) or (list[0][2] == 'X' and (list[0][2]==list[1][2]==list[2][2])) or (list[0][0] == 'X' and (list[0][0]==list[1][1]==list[2][2])) or (list[0][2] == 'X' and (list[0][2]==list[1][1]==list[2][0])):
        return 'computer'
    elif (list[0][0] == 'O' and (list[0][0]==list[0][1]==list[0][2])) or (list[1][0] == 'O' and (list[1][0]==list[1][1]==list[1][2])) or (list[2][0] == 'O' and (list[2][0]==list[2][1]==list[2][2])) or (list[0][0] == 'O' and (list[0][0]==list[1][0]==list[2][0])) or (list[0][1] == 'O' and (list[0][1]==list[1][1]==list[2][1])) or (list[0][2] == 'O' and (list[0][2]==list[1][2]==list[2][2])) or (list[0][0] == 'O' and (list[0][0]==list[1][1]==list[2][2])) or (list[0][2] == 'O' and (list[0][2]==list[1][1]==list[2][0])):
        return 'user'
    else:
        return 'draw'

from random import randrange

list = [[1,2,3],[4,5,6],[7,8,9]]


def Game(list): #main game function
    while winnercheck(list) != 'computer' or winnercheck(list) != 'user':
        computer_turn_number = computer_turn(list)
        list = computer_updatelist(list, computer_turn_number)
        box_print(list)
        user_turn_number = user_turn(list) #!!!Error occurs here the second time the user_turn function runs returns 'None' in user_turn_number
        list = user_updatelist(list, user_turn_number) 
        box_print(list)

Game(list)


